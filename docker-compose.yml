version: '3'
services:
  nodejs:
    restart: unless-stopped
    tty: true
    build:
      context: .
      dockerfile: docker/DockerfileNodejs12
    image: "nodejs"
    restart: unless-stopped
    tty: true
    volumes:
      - ./app/:/usr/src/app
    environment:
      SERVICE_NAME: nodejs
      SERVICE_TAGS: dev
    ports:
      - "7777:3000"
    networks:
      - app-network
  php72:
    build:
      context: .
      dockerfile: docker/Dockerfilephp72
    image: php72
    # container_name: php72
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: php72
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./app/:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
  webserver:
    image: nginx:alpine
    # container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - ${APP_PORT}:80
      # - "443:443"
    volumes:
      - ./app/:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network
    depends_on:
      - webserver1
      - webserver2
  webserver1:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    ports:
      - 9991:80
    volumes:
      - ./app/:/var/www
      - ./docker/nginx/app.d/:/etc/nginx/conf.d/
    networks:
      - app-network
  webserver2:
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    ports:
      - 9992:80
    volumes:
      - ./app/:/var/www
      - ./docker/nginx/app.d/:/etc/nginx/conf.d/
    networks:
      - app-network
  #Scheduler
  scheduler:
    image: php72
    command: /var/www/docker/work.sh schedule
    # container_name: scheduler_laravel_api
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./app/:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
  #Queue
  queue:
    image: php72
    command: /var/www/docker/work.sh queue
    # container_name: queue_laravel_api
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./app/:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network
  redis:
    image: redis:alpine
    # container_name: myapp-redis
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    volumes:
      - ./data/redis:/redist-data
      - ./docker/redis/sysctl.conf:/etc/sysctl.conf
    # ports:
      # - "8002:6379"
    networks:
      - app-network
  adminer:
    image: adminer
    restart: always
    ports:
      - ${ADMINER_PORT}:8080
    links:
      - db
    depends_on: 
      - db
    networks:
      - app-network
  #MySQL Service
  db:
    image: mysql:5.7.22
    # container_name: db
    restart: unless-stopped
    tty: true
    # ports:
      # - "3308:3306"
    environment:
      MYSQL_DATABASE: db
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network 
    networks:
      - app-network
#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
    